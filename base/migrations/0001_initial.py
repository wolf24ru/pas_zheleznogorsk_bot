# Generated by Django 4.2 on 2023-08-30 02:59

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import telegram_django_bot.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                (
                    "seed_code",
                    models.IntegerField(default=telegram_django_bot.models._seed_code),
                ),
                (
                    "telegram_username",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "telegram_language_code",
                    models.CharField(default="en", max_length=16),
                ),
                (
                    "timezone",
                    models.DurationField(default=datetime.timedelta(seconds=10800)),
                ),
                (
                    "current_utrl",
                    models.CharField(blank=True, default="", max_length=64),
                ),
                ("current_utrl_code_dttm", models.DateTimeField(blank=True, null=True)),
                (
                    "current_utrl_context_db",
                    models.CharField(blank=True, default="{}", max_length=4096),
                ),
                (
                    "current_utrl_form_db",
                    models.CharField(blank=True, default="{}", max_length=4096),
                ),
                (
                    "date",
                    models.PositiveIntegerField(
                        db_comment="Дней до напоминания",
                        default=60,
                        verbose_name="Дней до напоминания",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Pass_User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        db_comment="Фамилия", max_length=150, verbose_name="Фамилия"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_comment="Имя", max_length=150, verbose_name="Имя"
                    ),
                ),
                (
                    "patronymic",
                    models.CharField(
                        blank=True,
                        db_comment="Отчество",
                        max_length=150,
                        null=True,
                        verbose_name="Отчество",
                    ),
                ),
                (
                    "status_solution",
                    models.CharField(
                        db_comment="Решение", max_length=200, verbose_name="Решение"
                    ),
                ),
                (
                    "bb_date",
                    models.DateField(
                        blank=True,
                        db_comment="Дата окончания",
                        null=True,
                        verbose_name="Дата окончания",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SNILS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_comment="Имя СНИЛС",
                        max_length=150,
                        verbose_name="Имя СНИЛС",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        db_comment="Номер СНИЛС",
                        max_length=20,
                        unique=True,
                        verbose_name="Номер СНИЛС",
                    ),
                ),
                (
                    "pass_user",
                    models.ManyToManyField(
                        blank=True,
                        related_name="snils_pass",
                        related_query_name="snils_pass_s",
                        to="base.pass_user",
                        verbose_name="Список пропусков",
                    ),
                ),
                (
                    "users_snils",
                    models.ManyToManyField(
                        related_name="snilss",
                        related_query_name="snils",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователи",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="subscriptions",
            field=models.ManyToManyField(
                blank=True,
                db_constraint="Избранное",
                related_name="telegram_users",
                related_query_name="telegram_user_s",
                to="base.pass_user",
                verbose_name="Избранное",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
